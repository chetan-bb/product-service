apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: node-deploment
  namespace: product
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      pod: product-pod
  template:
    metadata:
      labels:
        pod: product-pod
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: "config-volume"
          hostPath:
            path: "/home/ubuntu/svc/product/conf"
            type: "Directory"

      # container setting
      containers:
        - name: product
          image: jugaljoshi/product-service
          imagePullPolicy: IfNotPresent
          env:
            - name: LOCAL_CONFIG_PATH
              value: "/product/microservice/conf/conf.json"
            - name: SECRET_CONFIG_PATH
              value: "/product/microservice/conf/secret.json"
            - name: QUEUE_CONFIG_PATH
              value: "/product/microservice/conf/queueConf.json"
            - name: IP
              value: "0.0.0.0"
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: "spec.nodeName"
            - name: K8S_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: "status.hostIP"
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.name"
            - name: K8S_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.namespace"
            - name: K8S_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
          ports:
            - name: node-port
              containerPort: 32001 # port that is exposed for container
              protocol: TCP
          volumeMounts:
            - mountPath: "/product/microservice/conf"
              name: "config-volume"
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 5
            tcpSocket:
              port: node-port
          readinessProbe:
            initialDelaySeconds: 35
            periodSeconds: 5
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 2
            httpGet:
              path: "/product/health/"
              port: node-port
