apiVersion: v1
kind: Service
metadata:
  name: node-external-service
spec:
  selector:
    pod: nginx-product-pod
  ports:
    - name: www
      port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort

---

#apiVersion: v1
#kind: Service
#metadata:
#  name: internal-service
#  labels:
#    app: mysql-service
#spec:
#  selector:
#    app: mysql-pod
#  ports:
#    - name: mysql
#      port: 3306
#      targetPort: mysql-port
#      protocol: TCP
#  type: ClusterIP
#
#
#---

#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: config-map-product-service
#data:
#  db.host: "internal-service"
#  node.port: "3000"
#  nginx.conf: |-
#    user  nginx;
#    worker_processes  1;
#
#    error_log  /var/log/nginx/error.log warn;
#    pid        /var/run/nginx.pid;
#
#    events {
#        worker_connections  1024;
#    }
#
#    http {
#        include       /etc/nginx/mime.types;
#        default_type  application/octet-stream;
#
#        sendfile        on;
#        keepalive_timeout  65;
#
#        upstream product {
#            server localhost:3000;
#        }
#
#        server {
#            listen 80;
#
#            location / {
#                proxy_pass         http://product;
#                proxy_redirect     off;
#            }
#        }
#    }
#
#---

apiVersion: v1
kind: Pod
metadata:
  name: nginx-pod
spec:
  containers:
    - name: nginx-container
      image: nginx
      ports:
        -  name: ngnix-port
           containerPort: 80
           protocol: TCP
#      volumeMounts:
#        - name: ngnix-proxy-conf-vol
#          mountPath: /etc/nginx/nginx.conf
#          subPath: nginx.conf
#  volumes:
#    - name: ngnix-proxy-conf-vol
#      configMap:
#        name: config-map-product-service


#---
#
#apiVersion: v1
#kind: Secret
#metadata:
#  name: product-service-secret
#type: Opeque
#data:
#  database: "YmlnYmFza2V0Cg=="
#  user: "cm9vdAo="
#  password: "dG9vcgo="
#  dialect: "bXlzcWwK"
#  db.port: "3306"
#
#---
#apiVersion: extensions/v1beta1  #apps/v1
#kind: Deployment
#metadata:
#  name: node-deploment
#spec:
#  replicas: 2
#  selector:
#    matchLabels:
#      pod: nginx-product-pod
#  template:
#    metadata:
#      labels:
#        pod: nginx-product-pod
#    spec:
#      containers:
#        - name: product
#          image: jugaljoshi/product-service
#          env:
#            - name: PORT
#              valueFrom:
#                configMapKeyRef:
#                  name: config-map-product-service
#                  key: node.port
#            - name: HOST
#              valueFrom:
#                configMapKeyRef:
#                  name: config-map-product-service
#                  key: db.host
#            - name: DATABASE
#              valueFrom:
#                secretKeyRef:
#                  name: product-service-secret
#                  key: database
#            - name: USER
#              valueFrom:
#                secretKeyRef:
#                  name: product-service-secret
#                  key: user
#            - name: PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: product-service-secret
#                  key: password
#            - name: DIALECT
#              valueFrom:
#                secretKeyRef:
#                  name: product-service-secret
#                  key: dialect
#            - name: DBPORT
#              valueFrom:
#                secretKeyRef:
#                  name: product-service-secret
#                  key: db.port
#          ports:
#            - name: node-port
#              containerPort: 3000
#              protocol: TCP
#
#---


